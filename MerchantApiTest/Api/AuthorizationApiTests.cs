/* 
 * Merchant API
 *
 * Afterpay Merchant API Initial build
 *
 * OpenAPI spec version: 2017-03-01
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Text;

using NUnit.Framework;

using RestSharp;

using MerchantApi.Api;
using MerchantApi.Model;

namespace MerchantApi.Test
{
    /// <summary>
    ///  Class for testing AuthorizationApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class AuthorizationApiTests
    {
        private AuthorizationApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new AuthorizationApi("https://api-sandbox.afterpay.com/v2/");
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of AuthorizationApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' AuthorizationApi
            Assert.IsInstanceOf<AuthorizationApi>(instance, "instance is a AuthorizationApi");
        }
                
        /// <summary>
        /// Test CheckoutsCreate
        /// </summary>
        [Test]
        public void AuthorizationCreateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value

            //var client = new RestClient("https://api-sandbox.afterpay.com/v2/configuration");
            //client.Timeout = -1;
            //var request = new RestRequest(Method.GET);
            //request.AddHeader("Accept", "*/*");
            //var authorization = Convert.ToBase64String(Encoding.Default.GetBytes("MerchantId:MerchantSecretKey"));
            //request.AddHeader("Authorization", $"Basic {authorization}"); 
            //IRestResponse response = client.Execute(request);

            instance.Configuration.MerchantId = "MerchantId";
            instance.Configuration.MerchantSecretKey = "MerchantSecretKey";
            instance.Configuration.UserAgent = "Afterpay SDK; .netCore3.1";

            var response = instance.AuthorizationCreateToken();

            Assert.IsInstanceOf<Authentication>(response, "response is AccessToken");
        }
        
        /// <summary>
        /// Test CheckoutsGet
        /// </summary>
        [Test]
        public void AuthorizationGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value

            string id = null;

            AuthorizationCreateTest();

            var response = instance.AuthorizationGetToken(id);

            Assert.IsInstanceOf<String>(response, "response is Authentication");
        }
        
    }

}
