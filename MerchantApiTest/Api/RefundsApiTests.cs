/* 
 * Merchant API
 *
 * ZipMoney Merchant API Initial build
 *
 * OpenAPI spec version: 2017-03-01
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using MerchantApi.Client;
using MerchantApi.Api;
using MerchantApi.Model;

namespace MerchantApi.Test
{
    /// <summary>
    ///  Class for testing RefundsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class RefundsApiTests
    {
        private RefundsApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new RefundsApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of RefundsApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' RefundsApi
            //Assert.IsInstanceOfType(typeof(RefundsApi), instance, "instance is a RefundsApi");
        }

        
        /// <summary>
        /// Test RefundsCreate
        /// </summary>
        [Test]
        public void RefundsCreateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateRefundRequest body = null;
            //string idempotencyKey = null;
            //var response = instance.RefundsCreate(body, idempotencyKey);
            //Assert.IsInstanceOf<Refund> (response, "response is Refund");
        }
        
        /// <summary>
        /// Test RefundsList
        /// </summary>
        [Test]
        public void RefundsListTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string chargeId = null;
            //int? skip = null;
            //int? limit = null;
            //var response = instance.RefundsList(chargeId, skip, limit);
            //Assert.IsInstanceOf<List<InlineResponse200>> (response, "response is List<InlineResponse200>");
        }
        
        /// <summary>
        /// Test RefundsRetrieve
        /// </summary>
        [Test]
        public void RefundsRetrieveTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //var response = instance.RefundsRetrieve(id);
            //Assert.IsInstanceOf<Refund> (response, "response is Refund");
        }
        
    }

}
